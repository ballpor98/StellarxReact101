{"version":3,"sources":["components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/FormInputs/FormInputs.jsx","views/createAccountPage/createAccountPage.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","routes/dashboard.jsx","views/votePage/votePage.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","routes/index.jsx","index.js"],"names":["Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","server","stellar","Server","createData","array","res","forEach","bnk","name","sort","b","nameA","toUpperCase","nameB","getStellar","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","loop","data","wrap","_context2","prev","next","arrayP","map","_ref2","_callee","_context","accounts","accountId","publicKey","call","sent","abrupt","String","parseInt","balances","balance","stop","_x","_x2","apply","arguments","Promise","all","createChart","canvas","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","timer","queryData","_callee3","labels","vote","chart","_context3","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","setState","state","intervalId","setInterval","clearInterval","reactstrap_es","xs","react_chartjs_2_es","width","height","components_Stats_Stats","FieldGroup","focus","_this2","_this$props","label","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","assign","onFocus","e","onBlur","type","FormInputs","_Component","inherits","createClass","value","row","ncols","FormInputs_FieldGroup","proprieties","StellarSdk","Network","useTestNetwork","ps","dashRoutes","path","icon","component","createAccountPage","handler","sourceKeypair","asset","newKeypair","sourceAccount","transaction","createAccountOptions","createAccountOperation","transactionResult","transaction2","changeTrustOptions","paymentOptions","changeTrustOperation","paymentOperation","transactionResult2","creating","headerText","Keypair","fromSecret","Asset","random","loadAccount","TransactionBuilder","destination","startingBalance","Operation","createAccount","addOperation","build","sign","submitTransaction","console","log","JSON","stringify","source","amount","changeTrust","payment","secretKey","secret","tag","Button_default","disabled","variant","onClick","components_FormInputs_FormInputs","votePage","redirect","pathTo","Header","isOpen","dropdownOpen","toggle","bind","assertThisInitialized","dropdownToggle","dashboardRoutes","prop","collapse","views","location","pathname","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","indexOf","_this3","expand","fluid","ref","openSidebar","href","getBrand","navbar","placeholder","addonType","Link","to","nav","caret","right","Footer","default","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","routes","pro","NavLink","activeClassName","indexRoutes","handleActiveClick","handleBgClick","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","Router","getElementById"],"mappings":"q2BAsBeA,mLAfX,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIC,KAAKC,MAAMC,SAASC,OAAQJ,IAC9CD,EAAMM,KAAKC,EAAAC,EAAAC,cAAA,KAAGC,UAAWR,KAAKC,MAAMC,SAASH,GAAGA,EAAGU,IAAKV,KACxDD,EAAMM,KAAK,IAAMJ,KAAKC,MAAMC,SAASH,GAAGW,GACpCX,IAAMC,KAAKC,MAAMC,SAASC,OAAS,GACrCL,EAAMM,KAAKC,EAAAC,EAAAC,cAAA,YAGf,OAAOF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASV,UAVfa,IAAMC,qCCcpBC,EAAS,IAAIC,IAAQC,OAAO,uCAC5BC,EAAW,SAACC,GAChB,IAAMC,EAAI,GAsBV,OArBAD,EAAME,QAAQ,SAACC,GACb,IAAIC,EAAOD,EAAIC,KACfH,EAAId,KAAK,CACPiB,EACA,MAEFH,EAAII,KAAK,SAAShB,EAAGiB,GACnB,IAAIC,EAAQlB,EAAE,GAAGmB,cACbC,EAAQH,EAAE,GAAGE,cACjB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,IAETR,EAAII,KAAK,SAAShB,EAAGiB,GACnB,OAAOjB,EAAE,GAAKiB,EAAE,OAGbL,GAGHS,EAAU,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzB,EAAA8B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVL,EAAOM,EAAOC,IAAP,eAAAC,EAAAb,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAAW,SAAAW,EAAOvB,EAAIX,GAAX,IAAAY,EAAAH,EAAA,OAAAa,EAAAzB,EAAA8B,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAClBlB,EAAOD,EAAIC,KADOuB,EAAAL,KAAA,EAEJ1B,EAAOgC,WACxBC,UAAU1B,EAAI2B,WACdC,OAJqB,cAEhB9B,EAFgB0B,EAAAK,KAAAL,EAAAM,OAAA,SAKd,CAAC7B,EAAK8B,OAAOC,SAASlC,EAAImC,SAAS,GAAGC,YALxB,wBAAAV,EAAAW,SAAAZ,EAAA3C,SAAX,gBAAAwD,EAAAC,GAAA,OAAAf,EAAAgB,MAAA1D,KAAA2D,YAAA,IADGtB,EAAAE,KAAA,EAQGqB,QAAQC,IAAI3B,GARf,cAQVC,EARUE,EAAAY,MASX3B,KAAK,SAAShB,EAAGiB,GACpB,IAAIC,EAAQlB,EAAE,GAAGmB,cACbC,EAAQH,EAAE,GAAGE,cACjB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,IAETS,EAAKb,KAAK,SAAShB,EAAGiB,GACpB,OAAOjB,EAAE,GAAKiB,EAAE,KArBFc,EAAAa,OAAA,SAuBTf,GAvBS,wBAAAE,EAAAkB,SAAAtB,EAAAjC,SAAF,yBAAA4B,EAAA8B,MAAA1D,KAAA2D,YAAA,GA0BVG,EAAc,SAAC3B,GACnB,MAAQ,CACNA,KAAM,SAAA4B,GACJ,OAAO5B,GAET6B,QAAS,CACPC,OAAQ,CACNC,SAAS,GAGXC,SAAU,CACRC,SAAS,GAGXC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,UAAW,UACXC,aAAa,EACbC,cAAe,GAGjBC,UAAW,CACTC,YAAY,EACZC,cAAe,OACfC,MAAO,4BAKbC,MAAO,CACL,CACEC,cAAe,GACfL,UAAW,CACTC,YAAY,EACZE,MAAO,wBACPD,cAAe,cACfX,SAAS,GAEXK,MAAO,CACLE,aAAY,EACZQ,QAAS,GACTT,UAAW,iBAgHVU,cAtGb,SAAAA,EAAYjF,GAAO,IAAAkF,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAkF,IACjBC,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAqD,GAAAlC,KAAAhD,KAAMC,KA8BTsF,MAAQ,WACNJ,EAAKK,aAhCaL,EAuCpBK,UAvCoB3D,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAuCR,SAAAyD,IAAA,IAAAtD,EAAAuD,EAAAC,EAAAC,EAAA,OAAA7D,EAAAzB,EAAA8B,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACOZ,IADP,OACNQ,EADM0D,EAAA5C,KAENyC,EAASvD,EAAKM,IAAI,SAACrB,EAAIX,GACzB,OAAQW,EAAI,KAEVuE,EAAOxD,EAAKM,IAAI,SAACrB,EAAIX,GACvB,OAAQW,EAAI,KAEVwE,EAAQ,CACVF,OAAQA,EACRI,SAAU,CACR,CACEC,YAAa,UACbC,gBAAiB,UACjBC,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbhE,KAAMwD,KAMZR,EAAKiB,SAAS,CAAER,MAAO9B,EAAY8B,KAvBzB,wBAAAC,EAAAtC,SAAAkC,EAAAzF,SArCT,IAAImC,EAAOnB,EAAWwB,GAOlBoD,EAAQ,CACVF,OAPWvD,EAAKM,IAAI,SAACrB,EAAIX,GACzB,OAAQW,EAAI,KAOZ0E,SAAU,CACR,CACEC,YAAa,UACbC,gBAAiB,UACjBC,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbhE,KAZKA,EAAKM,IAAI,SAACrB,EAAIX,GACvB,OAAQW,EAAI,QAPG,OAsBjB+D,EAAKkB,MAAQ,CACXT,MAAM9B,EAAY8B,IAvBHT,mFA2BjBnF,KAAKwF,YACL,IAAIc,EAAcC,YAAYvG,KAAKuF,MAAO,KAC1CvF,KAAKoG,SAAS,CAAEE,WAAYA,mDAO7BE,cAAcxG,KAAKqG,MAAMC,6CA8BxB,IAAMV,EAAQ5F,KAAKqG,MAAMT,MACzB,OACEvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAKC,GAAI,IACPrG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,sBAEFpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACExE,KAAMyD,EAAMzD,KACZ6B,QAAS4B,EAAM5B,QACf4C,MAAO,IACPC,OAAQ,OAGZxG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuG,EAAD,KACG,CACC,CACE/G,EAAG,iBACHW,EAAG,wCA1FDC,IAAMC,6BChHxBmG,cACJ,SAAAA,EAAY9G,GAAO,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAA+G,IACjB5B,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAkF,GAAA/D,KAAAhD,KAAMC,KACDoG,MAAQ,CACXW,OAAO,GAHQ7B,wEAMV,IAAA8B,EAAAjH,KAAAkH,EAUHlH,KAAKC,MARPkH,EAFKD,EAELC,MACAC,EAHKF,EAGLE,UACAC,EAJKH,EAILG,WACAC,EALKJ,EAKLI,eACAC,EANKL,EAMLK,WACAC,EAPKN,EAOLM,WACAC,EARKP,EAQLO,gBACAC,EATKR,EASLQ,qBAEEC,EAAU,IAMd,YALwBC,IAApBH,QACgCG,IAA9BH,EAAgBjH,YAClBmH,GAAWF,EAAgBjH,UAAY,UAGzBoH,IAAdR,QAA0CQ,IAAfP,EAE3BhH,EAAAC,EAAAC,cAACkG,EAAA,EAAD5E,OAAAgG,OAAA,GACMJ,EADN,CAEEjH,UAAWmH,GAAW3H,KAAKqG,MAAMW,MAAQ,oBAAsB,WAEhDY,IAAdR,EACC/G,EAAAC,EAAAC,cAACkG,EAAA,EAAoBiB,EAClBN,GAGH,GAEF/G,EAAAC,EAAAC,cAACkG,EAAA,EAAD5E,OAAAgG,OAAA,GACML,EADN,CAEEM,QAAS,SAAAC,GAAC,OAAId,EAAKb,SAAS,CAAEY,OAAO,KACrCgB,OAAQ,SAAAD,GAAC,OAAId,EAAKb,SAAS,CAAEY,OAAO,aAEtBY,IAAfP,EACChH,EAAAC,EAAAC,cAACkG,EAAA,EAAoBiB,EAClBL,GAGH,IAImB,UAApBG,EAAWS,MAAwC,aAApBT,EAAWS,KAC/C5H,EAAAC,EAAAC,cAACkG,EAAA,EAAD5E,OAAAgG,OAAA,GACMP,EADN,CAEE9G,UAA+B,UAApBgH,EAAWS,KAAmB,mBAAqB,KAE9D5H,EAAAC,EAAAC,cAACkG,EAAA,EAAUc,EACTlH,EAAAC,EAAAC,cAACkG,EAAA,EAAUe,GACXnH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACf2G,GAAgB,KAIrB9G,EAAAC,EAAAC,cAACkG,EAAA,EAAca,EACZH,EAAQ9G,EAAAC,EAAAC,cAACkG,EAAA,EAAUc,EAAaJ,GAAiB,GAClD9G,EAAAC,EAAAC,cAACkG,EAAA,EAAUe,WAjEM7G,IAAMC,WA0FhBsH,EAnBf,SAAAC,GAAA,SAAAD,IAAA,OAAArG,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAkI,GAAArG,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAqG,GAAAxE,MAAA1D,KAAA2D,YAAA,OAAA9B,OAAAuG,EAAA,EAAAvG,CAAAqG,EAAAC,GAAAtG,OAAAwG,EAAA,EAAAxG,CAAAqG,EAAA,EAAAzH,IAAA,SAAA6H,MAAA,WAGI,IADA,IAAIC,EAAM,GACDxI,EAAI,EAAGA,EAAIC,KAAKC,MAAMuI,MAAMrI,OAAQJ,IAC3CwI,EAAInI,KACFC,EAAAC,EAAAC,cAAA,OAAKE,IAAKV,EAAGS,UAAWR,KAAKC,MAAMuI,MAAMzI,IACvCM,EAAAC,EAAAC,cAACkI,EAAezI,KAAKC,MAAMyI,YAAY3I,MAI7C,OAAOM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+H,OAVjCL,EAAA,CAAgCtH,aCrE1BC,EAAS,IAAI8H,IAAW5H,OAAO,uCACrC4H,IAAWC,QAAQC,qBCNfC,ECIAA,ECaWC,EArBE,CACf,CACEC,KAAM,aACN3H,KAAM,YACN4H,KAAM,0BACNC,UAAWhE,GAEb,CACE8D,KAAM,qBACN3H,KAAM,sBACN4H,KAAM,wBACNC,sBHEF,SAAAC,EAAYlJ,GAAO,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAmJ,IACjBhE,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAsH,GAAAnG,KAAAhD,KAAMC,KAQRmJ,QATmBvH,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAST,SAAAW,IAAA,IAAA0G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnI,EAAAzB,EAAA8B,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cACR4C,EAAKiB,SAAS,CACZ+D,UAAS,EACTC,WAAW,gBAGPf,EAAgBV,IAAW0B,QAAQC,WACvC,4DAEIhB,EAAQ,IAAIX,IAAW4B,MAC3B,QACAlB,EAActG,aAEVwG,EAAaZ,IAAW0B,QAAQG,SAb9B5H,EAAAL,KAAA,EAckB1B,EAAO4J,YAAYpB,EAActG,aAdnD,cAcJyG,EAdI5G,EAAAK,KAeJwG,EAAc,IAAId,IAAW+B,mBAAmBlB,GAEhDE,EAAuB,CACvBiB,YAAapB,EAAWxG,YACxB6H,gBAAiB,KAEjBjB,EAAyBhB,IAAWkC,UAAUC,cAAcpB,IAEhED,GADAA,EAAcA,EAAYsB,aAAapB,IACbqB,SACdC,KAAK5B,GAxBTzG,EAAAL,KAAA,GAyBsB1B,EAAOqK,kBAAkBzB,GAzB/C,eAyBJG,EAzBIhH,EAAAK,KA0BRkI,QAAQC,IAAIC,KAAKC,UAAU1B,EAAmB,KAAM,IAGhDC,EAAe,IAAIlB,IAAW+B,mBAAmBlB,GAEjDM,EAAqB,CACvBR,MAAOA,EACPiC,OAAQhC,EAAWxG,aAEjBgH,EAAiB,CACnBY,YAAapB,EAAWxG,YACxBuG,MAAOA,EACPkC,OAAQ,KAGNxB,EAAuBrB,IAAWkC,UAAUY,YAAY3B,GACxDG,EAAmBtB,IAAWkC,UAAUa,QAAQ3B,IAKpDF,GAFAA,GADAA,EAAeA,EAAakB,aAAaf,IACbe,aAAad,IAEbe,SACfC,KAAK5B,GAClBQ,EAAaoB,KAAK1B,GAjDV3G,EAAAL,KAAA,GAmDuB1B,EAAOqK,kBAAkBrB,GAnDhD,QAmDJK,EAnDItH,EAAAK,KAoDRkI,QAAQC,IAAIC,KAAKC,UAAUpB,EAAoB,KAAM,IAErD/E,EAAKiB,SACH,CACArD,UAAUwG,EAAWxG,YACrB4I,UAAUpC,EAAWqC,SACrBzB,UAAS,EACTC,WAAW,aA3DL,yBAAAxH,EAAAW,SAAAZ,EAAA3C,SAPRmF,EAAKkB,MAAQ,CACX+D,WAAW,uCACXrH,UAAU,MACV4I,UAAU,MACVxB,UAAS,GANMhF,wEAyEV,IAAA8B,EAAAjH,KACD+C,EAAY/C,KAAKqG,MAAMtD,UACvB4I,EAAY3L,KAAKqG,MAAMsF,UACvBvB,EAAapK,KAAKqG,MAAM+D,WACxBD,EAAWnK,KAAKqG,MAAM8D,SAC5B,OACE9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAKC,GAAI,IACPrG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMjG,UAAU,cACdH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWoF,IAAI,MAAMzB,IAEvB/J,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACApG,EAAAC,EAAAC,cAACuL,EAAAxL,EAAD,CAAQyL,SAAU5B,EAAU6B,QAAQ,YAClCC,QAAS,kBAAMhF,EAAKmC,YADtB,kBAKA/I,EAAAC,EAAAC,cAAC2L,EAAD,CACM1D,MAAO,CAAC,kBACRE,YAAa,CACX,CACEvB,MAAO,aACPK,WAAY,CACVS,KAAM,OACN8D,UAAU,EACVzD,MAAOvF,OAKjB1C,EAAAC,EAAAC,cAAC2L,EAAD,CACE1D,MAAO,CAAC,kBACRE,YAAa,CACX,CACEvB,MAAO,aACPK,WAAY,CACVS,KAAM,OACN8D,UAAU,EACVzD,MAAOqD,mBAlHChL,IAAMC,YGCpC,CACEoI,KAAM,YACN3H,KAAM,YACN4H,KAAM,qBACNC,sBCPF,SAAAiD,EAAYlM,GAAO,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAmM,IACjBhH,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAsK,GAAAnJ,KAAAhD,KAAMC,KACDoG,MAAQ,GAFIlB,wEAOjB,OACE9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAKC,GAAI,IACPrG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMjG,UAAU,cACdH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWoF,IAAI,MAAf,cAEFxL,EAAAC,EAAAC,cAACkG,EAAA,EAAD,iBAhBS9F,IAAMC,YDU3B,CAAEwL,UAAU,EAAMpD,KAAM,IAAKqD,OAAQ,aAAchL,KAAM,cEkL5CiL,cAlLb,SAAAA,EAAYrM,GAAO,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAsM,IACjBnH,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAyK,GAAAtJ,KAAAhD,KAAMC,KACDoG,MAAQ,CACXkG,QAAQ,EACRC,cAAc,EACd1H,MAAO,eAETK,EAAKsH,OAAStH,EAAKsH,OAAOC,KAAZ7K,OAAA8K,EAAA,EAAA9K,QAAA8K,EAAA,EAAA9K,CAAAsD,KACdA,EAAKyH,eAAiBzH,EAAKyH,eAAeF,KAApB7K,OAAA8K,EAAA,EAAA9K,QAAA8K,EAAA,EAAA9K,CAAAsD,KARLA,wEAWbnF,KAAKqG,MAAMkG,OACbvM,KAAKoG,SAAS,CACZtB,MAAO,gBAGT9E,KAAKoG,SAAS,CACZtB,MAAO,SAGX9E,KAAKoG,SAAS,CACZmG,QAASvM,KAAKqG,MAAMkG,gDAGTxE,GACb/H,KAAKoG,SAAS,CACZoG,cAAexM,KAAKqG,MAAMmG,kDAGnB,IACLnL,EADK4F,EAAAjH,KAuBT,OArBA6M,EAAgBpK,IAAI,SAACqK,EAAMrM,GAmBzB,OAlBIqM,EAAKC,SACPD,EAAKE,MAAMvK,IAAI,SAACqK,EAAMrM,GAIpB,OAHIqM,EAAK9D,OAAS/B,EAAKhH,MAAMgN,SAASC,WACpC7L,EAAOyL,EAAKzL,MAEP,QAGLyL,EAAKV,SACHU,EAAK9D,OAAS/B,EAAKhH,MAAMgN,SAASC,WACpC7L,EAAOyL,EAAKzL,OAQX,OAEFA,wCAGP8L,SAASC,gBAAgBC,UAAUZ,OAAO,YAC1CzM,KAAKsN,KAAKC,cAAcF,UAAUZ,OAAO,iDAIrCe,OAAOC,WAAa,KAAOzN,KAAKqG,MAAMkG,OACxCvM,KAAKoG,SAAS,CACZtB,MAAO,SAGT9E,KAAKoG,SAAS,CACZtB,MAAO,4DAKX0I,OAAOE,iBAAiB,SAAU1N,KAAK2N,YAAYjB,KAAK1M,kDAEvC+H,GAEfyF,OAAOC,WAAa,KACpB1F,EAAE6F,QAAQX,SAASC,WAAanF,EAAEkF,SAASC,WACiB,IAA5DC,SAASC,gBAAgB5M,UAAUqN,QAAQ,cAE3CV,SAASC,gBAAgBC,UAAUZ,OAAO,YAC1CzM,KAAKsN,KAAKC,cAAcF,UAAUZ,OAAO,6CAGpC,IAAAqB,EAAA9N,KACP,OAEEK,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACE3B,OACgE,IAA9D9E,KAAKC,MAAMgN,SAASC,SAASW,QAAQ,oBACjC,OACA7N,KAAKqG,MAAMvB,MAEjBiJ,OAAO,KACPvN,WACgE,IAA9DR,KAAKC,MAAMgN,SAASC,SAASW,QAAQ,oBACjC,4BACA,8BACsB,gBAArB7N,KAAKqG,MAAMvB,MAA0B,sBAAwB,KAGpEzE,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWuH,OAAK,GACd3N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACE0H,KAAK,SACLgG,IAAI,gBACJzN,UAAU,iBACVyL,QAAS,kBAAM6B,EAAKI,gBAEpB7N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAGpBH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAa0H,KAAK,KAAKnO,KAAKoO,aAE9B/N,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAewF,QAASjM,KAAKyM,QAC3BpM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qCAElBH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACE8F,OAAQvM,KAAKqG,MAAMkG,OACnB8B,QAAM,EACN7N,UAAU,uBAEVH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAYjG,UAAU,aACpBH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAO6H,YAAY,cACnBjO,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAiB8H,UAAU,UACzBlO,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAKrBH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAK4H,QAAM,GACThO,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAMC,GAAG,SAASjO,UAAU,wBAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,YAINH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEiI,KAAG,EACHnC,OAAQvM,KAAKqG,MAAMmG,aACnBC,OAAQ,SAAA1E,GAAC,OAAI+F,EAAKlB,eAAe7E,KAEjC1H,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAgBkI,OAAK,EAACD,KAAG,GACvBrO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,kBAGJH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAcmI,OAAK,GACjBvO,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAcoF,IAAI,KAAlB,UACAxL,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAcoF,IAAI,KAAlB,kBACAxL,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAcoF,IAAI,KAAlB,yBAGJxL,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAMC,GAAG,SAASjO,UAAU,uBAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,yBAvKCG,IAAMC,WCQZiO,mLAtBX,OACExO,EAAAC,EAAAC,cAAA,UACEC,UAAW,UAAYR,KAAKC,MAAM6O,QAAU,kBAAoB,KAEhEzO,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWuH,QAAOhO,KAAKC,MAAM+N,OAC3B3N,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAVNG,IAAMC,oBLmEZmO,cA9Db,SAAAA,EAAY9O,GAAO,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAA+O,IACjB5J,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAkN,GAAA/L,KAAAhD,KAAMC,KACD+O,YAAYtC,KAAjB7K,OAAA8K,EAAA,EAAA9K,QAAA8K,EAAA,EAAA9K,CAAAsD,KAFiBA,2EAKP8J,GACV,OAAOjP,KAAKC,MAAMgN,SAASC,SAASW,QAAQoB,IAAc,EAAI,SAAW,+CAGrEC,UAAUC,SAAStB,QAAQ,QAAU,IACvC/E,EAAK,IAAIsG,IAAiBpP,KAAKsN,KAAK+B,QAAS,CAC3CC,iBAAiB,EACjBC,iBAAiB,oDAKjBL,UAAUC,SAAStB,QAAQ,QAAU,GACvC/E,EAAG0G,2CAGE,IAAAvI,EAAAjH,KACP,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiP,aAAYzP,KAAKC,MAAMyP,QAASC,oBAAmB3P,KAAKC,MAAM2P,aACrFvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KACE4N,KAAK,oCACL3N,UAAU,2BAFZ,iBAOFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkByN,IAAI,WACnC5N,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACGzG,KAAKC,MAAM4P,OAAOpN,IAAI,SAACqK,EAAMrM,GAC5B,OAAIqM,EAAKV,SAAiB,KAExB/L,EAAAC,EAAAC,cAAA,MACEC,UACEyG,EAAK+H,YAAYlC,EAAK9D,OACrB8D,EAAKgD,IAAM,cAAgB,IAE9BrP,IAAKA,GAELJ,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CACEtB,GAAI3B,EAAK9D,KACTxI,UAAU,WACVwP,gBAAgB,UAEhB3P,EAAAC,EAAAC,cAAA,KAAGC,UAAWsM,EAAK7D,OACnB5I,EAAAC,EAAAC,cAAA,SAAIuM,EAAKzL,oBAnDPV,IAAMC,WMNbqP,EAFG,CAAC,CAAEjH,KAAM,IAAK3H,KAAM,OAAQ6H,sBLa5C,SAAAhE,EAAYjF,GAAM,IAAAkF,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAA7B,KAAAkF,IAChBC,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAA7B,KAAA6B,OAAAyD,EAAA,EAAAzD,CAAAqD,GAAAlC,KAAAhD,KAAMC,KAwBRiQ,kBAAoB,SAACpL,GACnBK,EAAKiB,SAAS,CAAEwJ,YAAa9K,KA1BbK,EA4BlBgL,cAAgB,SAACrL,GACfK,EAAKiB,SAAS,CAAEJ,gBAAiBlB,KA3BjCK,EAAKkB,MAAQ,CACXL,gBAAiB,QACjB4J,YAAa,QAJCzK,mFAQZ+J,UAAUC,SAAStB,QAAQ,QAAU,IACvC/E,EAAK,IAAIsG,IAAiBpP,KAAKsN,KAAK8C,WACpCjD,SAASkD,KAAKhD,UAAUZ,OAAO,wEAI7ByC,UAAUC,SAAStB,QAAQ,QAAU,IACvC/E,EAAG0G,UACHrC,SAASkD,KAAKhD,UAAUZ,OAAO,oEAGhB1E,GACQ,SAArBA,EAAE6F,QAAQ0C,SACZtQ,KAAKsN,KAAK8C,UAAUG,UAAY,EAChCpD,SAASqD,iBAAiBD,UAAY,oCAUxC,OACElQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkQ,EAAD5O,OAAAgG,OAAA,GACM7H,KAAKC,MADX,CAEE4P,OAAQhD,EACR6C,QAAS1P,KAAKqG,MAAML,gBACpB4J,YAAa5P,KAAKqG,MAAMuJ,eAE1BvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAayN,IAAI,aAC9B5N,EAAAC,EAAAC,cAACmQ,EAAW1Q,KAAKC,OACjBI,EAAAC,EAAAC,cAACoQ,EAAA,EAAD,KACG9D,EAAgBpK,IAAI,SAACqK,EAAMrM,GAC1B,OAAIqM,EAAKgD,IACA,KAELhD,EAAKV,SACA/L,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAUC,KAAM/D,EAAK9D,KAAMyF,GAAI3B,EAAKT,OAAQ5L,IAAKA,IAGxDJ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAO9H,KAAM8D,EAAK9D,KAAME,UAAW4D,EAAK5D,UAAWzI,IAAKA,OAI9DJ,EAAAC,EAAAC,cAACwQ,EAAD,CAAQ/C,OAAK,aAxDCrN,IAAMC,aMHxBoQ,EAAOC,cAEbC,IAASC,OACP9Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,CAAQxD,QAASoD,GACf3Q,EAAAC,EAAAC,cAACoQ,EAAA,EAAD,KACGV,EAAYxN,IAAI,SAACqK,EAAMrM,GACtB,OAAOJ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAO9H,KAAM8D,EAAK9D,KAAMvI,IAAKA,EAAKyI,UAAW4D,EAAK5D,gBAI/DiE,SAASkE,eAAe","file":"static/js/main.3159de9a.chunk.js","sourcesContent":["import React from \"react\";\r\n// used for making the prop types of this component\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Stats extends React.Component {\r\n  render() {\r\n    var stats = [];\r\n    for (var i = 0; i < this.props.children.length; i++) {\r\n      stats.push(<i className={this.props.children[i].i} key={i} />);\r\n      stats.push(\" \" + this.props.children[i].t);\r\n      if (i !== this.props.children.length - 1) {\r\n        stats.push(<br />);\r\n      }\r\n    }\r\n    return <div className=\"stats\">{stats}</div>;\r\n  }\r\n}\r\n\r\nStats.propTypes = {\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// react plugin used to create charts\r\nimport {HorizontalBar} from \"react-chartjs-2\";\r\n// function that returns a color based on an interval of numbers\r\n\r\nimport Stats from \"components/Stats/Stats.jsx\";\r\nimport arrayP from \"module/array_pubkey.json\";\r\nimport stellar from 'stellar-sdk';\r\n\r\nconst server = new stellar.Server('https://horizon-testnet.stellar.org');\r\nconst createData=(array)=> {\r\n  const res=[];\r\n  array.forEach((bnk)=>{\r\n    let name = bnk.name;\r\n    res.push([\r\n      name,\r\n      '0'\r\n    ]);\r\n    res.sort(function(a, b) {//sort name\r\n      var nameA = a[0].toUpperCase(); // ignore upper and lowercase\r\n      var nameB = b[0].toUpperCase(); // ignore upper and lowercase\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    res.sort(function(a, b) {//sort vote\r\n      return a[1] - b[1];\r\n    });\r\n  });\r\n  return res;\r\n}\r\n\r\nconst getStellar= async ()=>{\r\n  const loop = arrayP.map(async (bnk,key)=>{\r\n    let name = bnk.name;\r\n    const res = await server.accounts()\r\n    .accountId(bnk.publicKey)\r\n    .call()\r\n    return ([name,String(parseInt(res.balances[0].balance))]);\r\n  })\r\n  const data = await Promise.all(loop)\r\n  data.sort(function(a, b) {//sort name\r\n    var nameA = a[0].toUpperCase(); // ignore upper and lowercase\r\n    var nameB = b[0].toUpperCase(); // ignore upper and lowercase\r\n    if (nameA < nameB) {\r\n      return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n  data.sort(function(a, b) {//sort vote\r\n    return a[1] - b[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nconst createChart = (data)=>{\r\n  return ({\r\n    data: canvas => {\r\n      return data;\r\n    },\r\n    options: {\r\n      legend: {\r\n        display: false\r\n      },\r\n\r\n      tooltips: {\r\n        enabled: true\r\n      },\r\n\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              fontColor: \"#9f9f9f\",\r\n              beginAtZero: false,\r\n              maxTicksLimit: 5\r\n              // padding: 20\r\n            },\r\n            gridLines: {\r\n              drawBorder: false,\r\n              zeroLineColor: \"#ccc\",\r\n              color: \"rgba(255,255,255,0.05)\"\r\n            }\r\n          }\r\n        ],\r\n\r\n        xAxes: [\r\n          {\r\n            barPercentage: 0.8,\r\n            gridLines: {\r\n              drawBorder: false,\r\n              color: \"rgba(255,255,255,0.1)\",\r\n              zeroLineColor: \"transparent\",\r\n              display: false\r\n            },\r\n            ticks: {\r\n              beginAtZero:true,\r\n              padding: 10,\r\n              fontColor: \"#9f9f9f\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let data = createData(arrayP);\r\n    let labels = data.map((bnk,key)=>{\r\n      return (bnk[0]);\r\n    });\r\n    let vote = data.map((bnk,key)=>{\r\n      return (bnk[1]);\r\n    });\r\n    let chart = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          borderColor: \"#6bd098\",\r\n          backgroundColor: \"#6bd098\",\r\n          pointRadius: 0,\r\n          pointHoverRadius: 0,\r\n          borderWidth: 3,\r\n          data: vote\r\n        }\r\n      ]\r\n    };\r\n    this.state = {\r\n      chart:createChart(chart)\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.queryData();\r\n    var intervalId =  setInterval(this.timer, 20000);\r\n    this.setState({ intervalId: intervalId });\r\n }\r\n timer = () => {\r\n   this.queryData();\r\n };\r\n\r\n componentWillUnmount() {\r\n   clearInterval(this.state.intervalId);\r\n }\r\n\r\n queryData = async() => {\r\n   let data = await getStellar(); // createData(arrayP);\r\n   let labels = data.map((bnk,key)=>{\r\n     return (bnk[0]);\r\n   });\r\n   let vote = data.map((bnk,key)=>{\r\n     return (bnk[1]);\r\n   });\r\n   let chart = {\r\n     labels: labels,\r\n     datasets: [\r\n       {\r\n         borderColor: \"#6bd098\",\r\n         backgroundColor: \"#6bd098\",\r\n         pointRadius: 0,\r\n         pointHoverRadius: 0,\r\n         borderWidth: 3,\r\n         data: vote\r\n       }\r\n     ]\r\n   };\r\n   // console.log(chart.labels);\r\n   // console.log(chart.datasets[0].data);\r\n   this.setState({ chart: createChart(chart) });\r\n };\r\n\r\n  render() {\r\n    const chart = this.state.chart;\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Voting Chart</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <HorizontalBar\r\n                  data={chart.data}\r\n                  options={chart.options}\r\n                  width={400}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n              <CardFooter>\r\n                <hr />\r\n                <Stats>\r\n                  {[\r\n                    {\r\n                      i: \"fas fa-history\",\r\n                      t: \" Updated 0 minutes ago\"\r\n                    }\r\n                  ]}\r\n                </Stats>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n// used for making the prop types of this component\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FieldGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      focus: false\r\n    };\r\n  }\r\n  render() {\r\n    const {\r\n      label,\r\n      addonLeft,\r\n      addonRight,\r\n      formGroupProps,\r\n      labelProps,\r\n      inputProps,\r\n      inputGroupProps,\r\n      inputGroupAddonProps\r\n    } = this.props;\r\n    var classes = \" \";\r\n    if (inputGroupProps !== undefined) {\r\n      if (inputGroupProps.className !== undefined) {\r\n        classes += inputGroupProps.className + \" \";\r\n      }\r\n    }\r\n    if (addonLeft !== undefined || addonRight !== undefined)\r\n      return (\r\n        <InputGroup\r\n          {...inputGroupProps}\r\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\r\n        >\r\n          {addonLeft !== undefined ? (\r\n            <InputGroupAddon {...inputGroupAddonProps}>\r\n              {addonLeft}\r\n            </InputGroupAddon>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            {...inputProps}\r\n            onFocus={e => this.setState({ focus: true })}\r\n            onBlur={e => this.setState({ focus: false })}\r\n          />\r\n          {addonRight !== undefined ? (\r\n            <InputGroupAddon {...inputGroupAddonProps}>\r\n              {addonRight}\r\n            </InputGroupAddon>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </InputGroup>\r\n      );\r\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\r\n      <FormGroup\r\n        {...formGroupProps}\r\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\r\n      >\r\n        <Label {...labelProps}>\r\n          <Input {...inputProps} />\r\n          <span className=\"form-check-sign\" />\r\n          {label ? label : \"\"}\r\n        </Label>\r\n      </FormGroup>\r\n    ) : (\r\n      <FormGroup {...formGroupProps}>\r\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\r\n        <Input {...inputProps} />\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormInputs extends Component {\r\n  render() {\r\n    var row = [];\r\n    for (var i = 0; i < this.props.ncols.length; i++) {\r\n      row.push(\r\n        <div key={i} className={this.props.ncols[i]}>\r\n          <FieldGroup {...this.props.proprieties[i]} />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"row\">{row}</div>;\r\n  }\r\n}\r\n\r\nFormInputs.propTypes = {\r\n  ncols: PropTypes.arrayOf(PropTypes.string),\r\n  proprieties: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default FormInputs;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\r\nimport StellarSdk from 'stellar-sdk';\r\n\r\nconst server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\r\nStellarSdk.Network.useTestNetwork();\r\n\r\nclass createAccountPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerText:\"Click button to generate new account\",\r\n      publicKey:\"foo\",\r\n      secretKey:\"bar\",\r\n      creating:false\r\n    }\r\n  }\r\n  handler = async() => {\r\n    this.setState({\r\n      creating:true,\r\n      headerText:\"Please wait\"\r\n    });\r\n    //TODO\r\n    const sourceKeypair = StellarSdk.Keypair.fromSecret(\r\n      'SCSY3LLR6GMUO5DPSW6FP2RENBN7TOTII55R4MV3Y7FC2JKQWCDV2HZU'\r\n    );\r\n    const asset = new StellarSdk.Asset(\r\n      'Acoin', //Asset name\r\n      sourceKeypair.publicKey() //Issuer pubkey\r\n    )\r\n    const newKeypair = StellarSdk.Keypair.random();\r\n    let sourceAccount = await server.loadAccount(sourceKeypair.publicKey());\r\n    let transaction = new StellarSdk.TransactionBuilder(sourceAccount);\r\n\r\n    let createAccountOptions = {\r\n        destination: newKeypair.publicKey(),\r\n        startingBalance: \"2\"\r\n    };\r\n    let createAccountOperation = StellarSdk.Operation.createAccount(createAccountOptions);\r\n    transaction = transaction.addOperation(createAccountOperation);\r\n    transaction = transaction.build();\r\n    transaction.sign(sourceKeypair);\r\n    let transactionResult = await server.submitTransaction(transaction);\r\n    console.log(JSON.stringify(transactionResult, null, 2));\r\n    // -----------------------------------------------------------------------\r\n\r\n    let transaction2 = new StellarSdk.TransactionBuilder(sourceAccount);\r\n\r\n    let changeTrustOptions = {\r\n      asset: asset,\r\n      source: newKeypair.publicKey()\r\n    };\r\n    let paymentOptions = {\r\n      destination: newKeypair.publicKey(),\r\n      asset: asset,\r\n      amount: \"1\"\r\n    };\r\n\r\n    let changeTrustOperation = StellarSdk.Operation.changeTrust(changeTrustOptions);\r\n    let paymentOperation = StellarSdk.Operation.payment(paymentOptions);\r\n\r\n    transaction2 = transaction2.addOperation(changeTrustOperation);\r\n    transaction2 = transaction2.addOperation(paymentOperation);\r\n\r\n    transaction2 = transaction2.build();\r\n    transaction2.sign(sourceKeypair);\r\n    transaction2.sign(newKeypair);\r\n\r\n    let transactionResult2 = await server.submitTransaction(transaction2);\r\n    console.log(JSON.stringify(transactionResult2, null, 2));\r\n    //TODO\r\n    this.setState(\r\n      {\r\n      publicKey:newKeypair.publicKey(),\r\n      secretKey:newKeypair.secret(),\r\n      creating:false,\r\n      headerText:\"Complete\"\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const publicKey = this.state.publicKey;\r\n    const secretKey = this.state.secretKey;\r\n    const headerText = this.state.headerText;\r\n    const creating = this.state.creating;\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>\r\n                <CardTitle tag=\"h4\">{headerText}</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <Button disabled={creating} variant=\"contained\"\r\n                onClick={() => this.handler()}\r\n              >\r\n                Create Account\r\n              </Button>\r\n              <FormInputs\r\n                    ncols={[\"col-md-10 pr-1\"]}\r\n                    proprieties={[\r\n                      {\r\n                        label: \"Public Key\",\r\n                        inputProps: {\r\n                          type: \"text\",\r\n                          disabled: true,\r\n                          value: publicKey\r\n                        }\r\n                      },\r\n                    ]}\r\n                  />\r\n                <FormInputs\r\n                  ncols={[\"col-md-10 pr-1\"]}\r\n                  proprieties={[\r\n                    {\r\n                      label: \"Secret Key\",\r\n                      inputProps: {\r\n                        type: \"text\",\r\n                        disabled: true,\r\n                        value: secretKey\r\n                      }\r\n                    }\r\n                  ]}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default createAccountPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav } from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// import logo from \"logo.svg\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://bnk48voting.herokuapp.com\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            BNK48 Voting\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          <Nav>\r\n            {this.props.routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? \" active-pro\" : \"\")\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"components/Header/Header.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nvar ps;\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: \"black\",\r\n      activeColor: \"info\",\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.mainPanel);\r\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      this.refs.mainPanel.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n    }\r\n  }\r\n  handleActiveClick = (color) => {\r\n    this.setState({ activeColor: color });\r\n  }\r\n  handleBgClick = (color) => {\r\n    this.setState({ backgroundColor: color });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={dashboardRoutes}\r\n          bgColor={this.state.backgroundColor}\r\n          activeColor={this.state.activeColor}\r\n        />\r\n        <div className=\"main-panel\" ref=\"mainPanel\">\r\n          <Header {...this.props} />\r\n          <Switch>\r\n            {dashboardRoutes.map((prop, key) => {\r\n              if (prop.pro) {\r\n                return null;\r\n              }\r\n              if (prop.redirect) {\r\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\r\n              }\r\n              return (\r\n                <Route path={prop.path} component={prop.component} key={key} />\r\n              );\r\n            })}\r\n          </Switch>\r\n          <Footer fluid />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// <FixedPlugin\r\n//   bgColor={this.state.backgroundColor}\r\n//   activeColor={this.state.activeColor}\r\n//   handleActiveClick={this.handleActiveClick}\r\n//   handleBgClick={this.handleBgClick}\r\n// />\r\nexport default Dashboard;\r\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\r\nimport createAccountPage from \"views/createAccountPage/createAccountPage.jsx\";\r\nimport votePage from \"views/votePage/votePage.jsx\";\r\n\r\nvar dashRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"nc-icon nc-chart-bar-32\",\r\n    component: Dashboard\r\n  },\r\n  {\r\n    path: \"/createAccountPage\",\r\n    name: \"Create Account Page\",\r\n    icon: \"nc-icon nc-simple-add\",\r\n    component: createAccountPage\r\n  },\r\n  {\r\n    path: \"/votePage\",\r\n    name: \"Vote Page\",\r\n    icon: \"nc-icon nc-check-2\",\r\n    component: votePage\r\n  },\r\n  { redirect: true, path: \"/\", pathTo: \"/dashboard\", name: \"Dashboard\" }\r\n];\r\nexport default dashRoutes;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// import stellar from 'stellar-sdk';\r\n\r\n// const server = new stellar.Server('https://horizon-testnet.stellar.org');\r\n\r\nclass votePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>\r\n                <CardTitle tag=\"h4\">Vote page</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default votePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dropdownOpen: false,\r\n      color: \"transparent\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.dropdownToggle = this.dropdownToggle.bind(this);\r\n  }\r\n  toggle() {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"dark\"\r\n      });\r\n    }\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  dropdownToggle(e) {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n  getBrand() {\r\n    var name;\r\n    dashboardRoutes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  openSidebar() {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\r\n  }\r\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor() {\r\n    if (window.innerWidth < 993 && this.state.isOpen) {\r\n      this.setState({\r\n        color: \"dark\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // add or remove classes depending if we are on full-screen-maps page or not\r\n      <Navbar\r\n        color={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"dark\"\r\n            : this.state.color\r\n        }\r\n        expand=\"lg\"\r\n        className={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"navbar-absolute fixed-top\"\r\n            : \"navbar-absolute fixed-top \" +\r\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n        }\r\n      >\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button\r\n                type=\"button\"\r\n                ref=\"sidebarToggle\"\r\n                className=\"navbar-toggler\"\r\n                onClick={() => this.openSidebar()}\r\n              >\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={this.toggle}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n            className=\"justify-content-end\"\r\n          >\r\n            <form>\r\n              <InputGroup className=\"no-border\">\r\n                <Input placeholder=\"Search...\" />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>\r\n                    <i className=\"nc-icon nc-zoom-split\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </form>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\r\n                  <i className=\"nc-icon nc-layout-11\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n              <Dropdown\r\n                nav\r\n                isOpen={this.state.dropdownOpen}\r\n                toggle={e => this.dropdownToggle(e)}\r\n              >\r\n                <DropdownToggle caret nav>\r\n                  <i className=\"nc-icon nc-bell-55\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\r\n                  </p>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { Container, Row } from \"reactstrap\";\r\n// used for making the prop types of this component\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\r\n      >\r\n        <Container fluid={this.props.fluid ? true : false}>\r\n          <Row>\r\n            <nav className=\"footer-nav\">\r\n            </nav>\r\n            <div className=\"credits ml-auto\">\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nFooter.propTypes = {\r\n  default: PropTypes.bool,\r\n  fluid: PropTypes.bool\r\n};\r\n\r\nexport default Footer;\r\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\r\n\r\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: Dashboard }];\r\n\r\nexport default indexRoutes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"assets/scss/paper-dashboard.scss\";\r\nimport \"assets/demo/demo.css\";\r\n\r\nimport indexRoutes from \"routes/index.jsx\";\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      {indexRoutes.map((prop, key) => {\r\n        return <Route path={prop.path} key={key} component={prop.component} />;\r\n      })}\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}