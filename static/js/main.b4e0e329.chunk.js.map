{"version":3,"sources":["components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/FormInputs/FormInputs.jsx","views/createAccountPage/createAccountPage.jsx","views/votePage/votePage.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","routes/dashboard.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","routes/index.jsx","index.js"],"names":["Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","server","stellar","Server","createData","array","res","forEach","bnk","name","sort","b","nameA","toUpperCase","nameB","getStellar","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","loop","data","wrap","_context2","prev","next","arrayP","map","_ref2","_callee","_context","accounts","accountId","publicKey","call","sent","abrupt","String","parseInt","balances","balance","stop","_x","_x2","apply","arguments","Promise","all","createChart","canvas","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","timer","queryData","_callee3","labels","vote","chart","_context3","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","setState","state","intervalId","setInterval","clearInterval","reactstrap_es","xs","react_chartjs_2_es","width","height","components_Stats_Stats","FieldGroup","focus","_this2","_this$props","label","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","assign","onFocus","e","onBlur","type","FormInputs","_Component","inherits","createClass","value","row","ncols","FormInputs_FieldGroup","proprieties","StellarSdk","Network","useTestNetwork","createAccountPage","handler","sourceKeypair","asset","newKeypair","sourceAccount","transaction","createAccountOptions","createAccountOperation","transactionResult","transaction2","changeTrustOptions","paymentOptions","changeTrustOperation","paymentOperation","transactionResult2","creating","headerText","Keypair","fromSecret","Asset","random","loadAccount","TransactionBuilder","destination","startingBalance","Operation","createAccount","addOperation","build","sign","submitTransaction","console","log","JSON","stringify","source","amount","changeTrust","payment","secretKey","secret","tag","Button_default","disabled","variant","onClick","components_FormInputs_FormInputs","ps","dashRoutes","path","icon","component","votePage","textHandler","target","handleChange","handleButton","coach","coachPublicKey","assetKeypair","waiting","arrayC","c","onChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","FormControlLabel_default","control","Radio_default","redirect","pathTo","Header","isOpen","dropdownOpen","toggle","bind","assertThisInitialized","dropdownToggle","dashboardRoutes","prop","collapse","views","location","pathname","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","indexOf","_this3","expand","fluid","ref","openSidebar","href","getBrand","navbar","placeholder","addonType","Link","to","nav","caret","right","Footer","default","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","routes","pro","NavLink","activeClassName","indexRoutes","handleActiveClick","handleBgClick","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","Router","getElementById"],"mappings":"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","file":"static/js/main.b4e0e329.chunk.js","sourcesContent":["import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport {HorizontalBar} from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\nimport arrayP from \"module/array_pubkey.json\";\nimport stellar from 'stellar-sdk';\n\nconst server = new stellar.Server('https://horizon-testnet.stellar.org');\nconst createData=(array)=> {\n  const res=[];\n  array.forEach((bnk)=>{\n    let name = bnk.name;\n    res.push([\n      name,\n      '0'\n    ]);\n    res.sort(function(a, b) {//sort name\n      var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n      var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    res.sort(function(a, b) {//sort vote\n      return a[1] - b[1];\n    });\n  });\n  return res;\n}\n\nconst getStellar= async ()=>{\n  const loop = arrayP.map(async (bnk,key)=>{\n    let name = bnk.name;\n    const res = await server.accounts()\n    .accountId(bnk.publicKey)\n    .call()\n    return ([name,String(parseInt(res.balances[0].balance))]);\n  })\n  const data = await Promise.all(loop)\n  data.sort(function(a, b) {//sort name\n    var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n    var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n  data.sort(function(a, b) {//sort vote\n    return a[1] - b[1];\n  });\n  return data;\n}\n\nconst createChart = (data)=>{\n  return ({\n    data: canvas => {\n      return data;\n    },\n    options: {\n      legend: {\n        display: false\n      },\n\n      tooltips: {\n        enabled: true\n      },\n\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              fontColor: \"#9f9f9f\",\n              beginAtZero: false,\n              maxTicksLimit: 5\n              // padding: 20\n            },\n            gridLines: {\n              drawBorder: false,\n              zeroLineColor: \"#ccc\",\n              color: \"rgba(255,255,255,0.05)\"\n            }\n          }\n        ],\n\n        xAxes: [\n          {\n            barPercentage: 0.8,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(255,255,255,0.1)\",\n              zeroLineColor: \"transparent\",\n              display: false\n            },\n            ticks: {\n              beginAtZero:true,\n              padding: 10,\n              fontColor: \"#9f9f9f\"\n            }\n          }\n        ]\n      }\n    }\n  });\n}\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = createData(arrayP);\n    let labels = data.map((bnk,key)=>{\n      return (bnk[0]);\n    });\n    let vote = data.map((bnk,key)=>{\n      return (bnk[1]);\n    });\n    let chart = {\n      labels: labels,\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: vote\n        }\n      ]\n    };\n    this.state = {\n      chart:createChart(chart)\n    }\n  }\n  componentDidMount() {\n    this.queryData();\n    var intervalId =  setInterval(this.timer, 20000);\n    this.setState({ intervalId: intervalId });\n }\n timer = () => {\n   this.queryData();\n };\n\n componentWillUnmount() {\n   clearInterval(this.state.intervalId);\n }\n\n queryData = async() => {\n   let data = await getStellar(); // createData(arrayP);\n   let labels = data.map((bnk,key)=>{\n     return (bnk[0]);\n   });\n   let vote = data.map((bnk,key)=>{\n     return (bnk[1]);\n   });\n   let chart = {\n     labels: labels,\n     datasets: [\n       {\n         borderColor: \"#6bd098\",\n         backgroundColor: \"#6bd098\",\n         pointRadius: 0,\n         pointHoverRadius: 0,\n         borderWidth: 3,\n         data: vote\n       }\n     ]\n   };\n   // console.log(chart.labels);\n   // console.log(chart.datasets[0].data);\n   this.setState({ chart: createChart(chart) });\n };\n\n  render() {\n    const chart = this.state.chart;\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Voting Chart</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <HorizontalBar\n                  data={chart.data}\n                  options={chart.options}\n                  width={400}\n                  height={200}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 0 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport Button from '@material-ui/core/Button';\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\nimport StellarSdk from 'stellar-sdk';\n\nconst server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\nStellarSdk.Network.useTestNetwork();\n\nclass createAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headerText:\"Click button to generate new account\",\n      publicKey:\"foo\",\n      secretKey:\"bar\",\n      creating:false\n    }\n  }\n  handler = async() => {\n    this.setState({\n      creating:true,\n      headerText:\"Please wait\"\n    });\n    //TODO\n    const sourceKeypair = StellarSdk.Keypair.fromSecret(\n      'SCSY3LLR6GMUO5DPSW6FP2RENBN7TOTII55R4MV3Y7FC2JKQWCDV2HZU'\n    );\n    const asset = new StellarSdk.Asset(\n      'Acoin', //Asset name\n      sourceKeypair.publicKey() //Issuer pubkey\n    )\n    const newKeypair = StellarSdk.Keypair.random();\n    let sourceAccount = await server.loadAccount(sourceKeypair.publicKey());\n    let transaction = new StellarSdk.TransactionBuilder(sourceAccount);\n\n    let createAccountOptions = {\n        destination: newKeypair.publicKey(),\n        startingBalance: \"3\"\n    };\n    let createAccountOperation = StellarSdk.Operation.createAccount(createAccountOptions);\n    transaction = transaction.addOperation(createAccountOperation);\n    transaction = transaction.build();\n    transaction.sign(sourceKeypair);\n    let transactionResult = await server.submitTransaction(transaction);\n    console.log(JSON.stringify(transactionResult, null, 2));\n    // -----------------------------------------------------------------------\n\n    let transaction2 = new StellarSdk.TransactionBuilder(sourceAccount);\n\n    let changeTrustOptions = {\n      asset: asset,\n      source: newKeypair.publicKey()\n    };\n    let paymentOptions = {\n      destination: newKeypair.publicKey(),\n      asset: asset,\n      amount: \"1\"\n    };\n\n    let changeTrustOperation = StellarSdk.Operation.changeTrust(changeTrustOptions);\n    let paymentOperation = StellarSdk.Operation.payment(paymentOptions);\n\n    transaction2 = transaction2.addOperation(changeTrustOperation);\n    transaction2 = transaction2.addOperation(paymentOperation);\n\n    transaction2 = transaction2.build();\n    transaction2.sign(sourceKeypair);\n    transaction2.sign(newKeypair);\n\n    let transactionResult2 = await server.submitTransaction(transaction2);\n    console.log(JSON.stringify(transactionResult2, null, 2));\n    //TODO\n    this.setState(\n      {\n      publicKey:newKeypair.publicKey(),\n      secretKey:newKeypair.secret(),\n      creating:false,\n      headerText:\"Complete\"\n      }\n    );\n  }\n\n  render() {\n    const publicKey = this.state.publicKey;\n    const secretKey = this.state.secretKey;\n    const headerText = this.state.headerText;\n    const creating = this.state.creating;\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card className=\"card-plain\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">{headerText}</CardTitle>\n              </CardHeader>\n              <CardBody>\n              <Button disabled={creating} variant=\"contained\"\n                onClick={() => this.handler()}\n              >\n                Create Account\n              </Button>\n              <FormInputs\n                    ncols={[\"col-md-10 pr-1\"]}\n                    proprieties={[\n                      {\n                        label: \"Public Key\",\n                        inputProps: {\n                          type: \"text\",\n                          disabled: true,\n                          value: publicKey\n                        }\n                      },\n                    ]}\n                  />\n                <FormInputs\n                  ncols={[\"col-md-10 pr-1\"]}\n                  proprieties={[\n                    {\n                      label: \"Secret Key\",\n                      inputProps: {\n                        type: \"text\",\n                        disabled: true,\n                        value: secretKey\n                      }\n                    }\n                  ]}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default createAccountPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nimport StellarSdk from 'stellar-sdk';\nimport arrayC from \"module/array_pubkey.json\";\n\nconst server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\nStellarSdk.Network.useTestNetwork();\n\nclass votePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretKey:\"\",\n      value:\"\",\n      headerText:\"Vote page\",\n      waiting:false\n\n    }\n  }\n  textHandler = (e) => {\n    this.setState({secretKey: e.target.value});\n  }\n  handleChange = (e) => {\n    this.setState({value: e.target.value});\n  }\n  handleButton = async() =>{\n    this.setState({\n      waiting:true,\n      headerText:\"Please wait\"\n    });\n    const secretKey = this.state.secretKey;\n    const coach = this.state.value;\n    //TODO\n    let coachPublicKey = \"\";\n    arrayC.forEach((c)=>{\n      if(c.name===coach)\n      coachPublicKey = c.publicKey;\n    });\n    console.log(coachPublicKey);\n    const sourceKeypair = StellarSdk.Keypair.fromSecret(secretKey);\n    const assetKeypair = StellarSdk.Keypair.fromSecret(\n      'SCSY3LLR6GMUO5DPSW6FP2RENBN7TOTII55R4MV3Y7FC2JKQWCDV2HZU'\n    );\n    const asset = new StellarSdk.Asset(\n      'Acoin',\n      assetKeypair.publicKey()\n    )\n    let sourceAccount = await server.loadAccount(sourceKeypair.publicKey());\n    let transaction = new StellarSdk.TransactionBuilder(sourceAccount);\n    let paymentOptions = {\n      destination: coachPublicKey,\n      asset: asset,\n      amount: \"1\"\n    };\n    let paymentOperation = StellarSdk.Operation.payment(paymentOptions);\n    transaction = transaction.addOperation(paymentOperation);\n    transaction = transaction.build();\n    transaction.sign(sourceKeypair);\n    let transactionResult = await server.submitTransaction(transaction);\n    console.log(JSON.stringify(transactionResult, null, 2));\n    //TODO\n    this.setState({\n      waiting:false,\n      headerText:\"Finish\"\n    });\n    \n  }\n  render() {\n    const headerText = this.state.headerText;\n    const waiting = this.state.waiting;\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card className=\"card-plain\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">{headerText}</CardTitle>\n              </CardHeader>\n              <CardBody>\n              <FormInputs\n                  ncols={[\"col-md-10 pr-1\"]}\n                  proprieties={[\n                    {\n                      label: \"Secret Key\",\n                      inputProps: {\n                        type: \"text\",\n                        disabled: false,\n                        onChange: (e) => this.textHandler(e)\n                      }\n                    }\n                  ]}\n                />\n                <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Select Coach</FormLabel>\n          <RadioGroup\n            aria-label=\"Coach\"\n            name=\"Coach1\"\n            onChange={(e) => this.handleChange(e)}\n          >\n            <FormControlLabel value=\"Kong\" control={<Radio />} label=\"Kong\" />\n            <FormControlLabel value=\"Kim\" control={<Radio />} label=\"Kim\" />\n            <FormControlLabel value=\"Joey\" control={<Radio />} label=\"Joey\" />\n            <FormControlLabel value=\"Pop\" control={<Radio />} label=\"Pop\" />\n          </RadioGroup>\n          <Button disabled={waiting} variant=\"contained\"\n                onClick={() => this.handleButton()}\n              >\n                Vote\n              </Button>\n        </FormControl>\n        \n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default votePage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// import logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"https://ballpor98.github.io/StellarxReact101/\"\n            className=\"simple-text logo-normal\"\n          >\n            Stellar Voting\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n// <FixedPlugin\n//   bgColor={this.state.backgroundColor}\n//   activeColor={this.state.activeColor}\n//   handleActiveClick={this.handleActiveClick}\n//   handleBgClick={this.handleBgClick}\n// />\nexport default Dashboard;\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport createAccountPage from \"views/createAccountPage/createAccountPage.jsx\";\nimport votePage from \"views/votePage/votePage.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/StellarxReact101\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: Dashboard\n  },\n  {\n    path: \"/createAccountPage\",\n    name: \"Create Account Page\",\n    icon: \"nc-icon nc-simple-add\",\n    component: createAccountPage\n  },\n  {\n    path: \"/votePage\",\n    name: \"Vote Page\",\n    icon: \"nc-icon nc-check-2\",\n    component: votePage\n  },\n  { redirect: true, path: \"/\", pathTo: \"/StellarxReact101\", name: \"Dashboard\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                  <i className=\"nc-icon nc-layout-11\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n            </nav>\n            <div className=\"credits ml-auto\">\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\n\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: Dashboard }];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\n\nimport indexRoutes from \"routes/index.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />;\n      })}\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}